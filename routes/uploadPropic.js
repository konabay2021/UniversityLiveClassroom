
const express = require('express');
const router = express.Router();
const Post = require('../model/CreateAC')
var multer = require('multer')
const Course = require('../model/Course')

var fs = require('fs');
var cloudinary = require('cloudinary').v2;
middleware = require("../middleware")

cloudinary.config({
  cloud_name: 'dctxygull',
  api_key: '513994933187556',
  api_secret: 'y_db0s9tqyw6jEvRvW6c2MeBKZM'
});

var storage = multer.diskStorage({
  destination: function (req, file, cb) {
    cb(null, 'public')
  },
  filename: function (req, file, cb) {
    cb(null, Date.now() + '-' + file.originalname)
  }
})
var upload = multer({
  storage: storage, limits: { fileSize: 1000000 }, fileFilter(req, file, cb) {
    // 只接受三種圖片格式
    if (!file.originalname.match(/\.(jpg|jpeg|png)$/)) {
      cb(new Error('Please upload an image'))
    }
    cb(null, true)
  }
})

var uploadDoc = multer({
  storage: storage
})


router.post('/uploadPropic', middleware.sessionChecker, upload.single('recfile'), async (req, res) => {

  Post.find({ username: req.session.user }, function (err, docs) {
    if (docs.length) {
      cloudinary.uploader.upload(`./public/${req.file.filename}`, { tags: 'basic_sample' })
        .then(function (image) {
          console.log();
          console.log("** File Upload (Promise)");
          console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
          console.log("* " + image.public_id);
          console.log("* " + image.url);

          Post.findOneAndUpdate(
            { 'username': req.session.user },
            { $set: { 'pic': image.url } },
            { seFindAndModify: false },
            function (error, success) {
              if (error) {
                res.json(error);
              } else {
                res.json({ 'url': image.url });
              }
            });

        })
        .catch(function (err) {
          console.log();
          console.log("** File Upload (Promise)");
          res.json({ error: 'error upload!' })
        });
    } else {
      console.log('no user: ');
      res.json({ error: 'no user' })
    }
  });
}, (error, req, res, next) => {
  res.json({ error: 'Only Support Less Than 1MB jpg/jpeg/png file type!' })
})

//add course materails
router.post('/uplloadMaterial/:course/:type/:message/:date',middleware.sessionChecker, uploadDoc.single('recfile'), async (req, res) => {
  Course.find({ code: { $in: req.params.course } }, function (err, docs) {
    if (docs.length) {
      cloudinary.uploader.upload(`./public/${req.file.filename}`, { tags: 'basic_sample' })
        .then(function (image) {
          console.log();
          console.log("** File Upload (Promise)");
          console.log("* public_id for the uploaded image is generated by Cloudinary's service.");
          console.log("* " + image.public_id);
          console.log("* " + image.url);

          let pushobj = {}
          let updates ={}
          if (req.params.type === 'Assignment') {
            pushobj['materials.'+ req.params.type] = {
              'link': image.url,
              'name': req.params.message,
              'deadline': req.params.date,
            }
            updates={
              course: req.params.course,
              type: 'HW Updates',
              message: req.params.message
            }
          } else {
            pushobj['materials.'+ req.params.type] = {
              'link': image.url,
              'name': req.params.message
            }
            updates={
              course: req.params.course,
              type: 'Materials Update',
              message: req.params.message
            }
          }
          console.log(pushobj)
          
          // add course materals to course db
          Course.findOneAndUpdate(
            { 'code': req.params.course },
            { $push:  pushobj ,  },
            {   new: true , },
            function (error, success) {
              if (error) {
                // res.json(error);
              } else {
                // res.json(success);
              }
            });
            // add updates notification
            Course.findOneAndUpdate(
              { 'code': req.params.course },
              { $push : {updates: updates}   },
              {   new: true , },
              function (error, success) {
                if (error) {
                  res.json(error);
                } else {
                  res.json(success);
                }
              });

        })
        .catch(function (err) {
          console.log();
          console.log("** File Upload (Promise)");
          res.json({ error: 'error upload!' })
        });
    } else {
      console.log('no  course yet! ');
      res.json({ error: 'no course yet! ' })
    }
  }, (error, req, res, next) => {
    res.json({ error: 'Only Support Less Than 10MB file type!' })
  });


})


module.exports = router
